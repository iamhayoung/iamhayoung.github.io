{"version":3,"file":"component---src-pages-posts-js-806c10badcaea2b56787.js","mappings":"8KAoEA,UA5DA,YAAoC,IAAnBA,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACfC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,uLAUJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,UACX,mCACA,sBAAIK,MAAO,CAAEC,UAAU,SACpBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYlB,KAG/B,6BACGQ,EAAKC,YAAYU,KADpB,OAESC,EAAAA,EAAAA,GAAkBZ,EAAKa,cAGlC,+BACE,qBACEC,wBAAyB,CACvBC,OAAQf,EAAKC,YAAYe,aAAehB,EAAKiB,SAE/CP,SAAS,0B,qBCxDtB,SAASE,EAAkBM,GAChC,IAAIC,EAAUC,KAAKC,MAAMH,EAAU,GAEnC,OAAIC,EAAU,EACF,IAAIG,MAAMF,KAAKC,MAAMF,EAAUC,KAAKG,IAC3CC,KAAK,MACLC,KAAK,IAFR,IAEeP,EAFf,YAIU,IAAII,MAAMH,GAAW,GAC5BK,KAAK,MACLC,KAAK,IAFR,IAEeP,EAFf,Y","sources":["webpack://hayoung-life/./src/pages/posts.js","webpack://hayoung-life/./src/utils/helpers.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nimport { formatReadingTime } from \"../utils/helpers\";\n\nfunction Posts({ data, location }) {\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"Posts\" />\n      <h1>Posts</h1>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug;\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>\n                    {post.frontmatter.date}\n                    {` ‚Ä¢ ${formatReadingTime(post.timeToRead)}`}\n                  </small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n    </Layout>\n  );\n}\n\nexport default Posts;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  let thunder = Math.round(minutes / 5);\n\n  if (thunder > 5) {\n    return `${new Array(Math.round(thunder / Math.E))\n      .fill(\"üî•\")\n      .join(\"\")} ${minutes} min read`;\n  } else {\n    return `${new Array(thunder || 1)\n      .fill(\"‚ö°Ô∏è\")\n      .join(\"\")} ${minutes} min read`;\n  }\n}\n"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","minutes","thunder","Math","round","Array","E","fill","join"],"sourceRoot":""}