{"version":3,"file":"component---src-templates-blog-post-js-ff7df70e3a2c0ca9cfab.js","mappings":"mJAuDA,IA5CY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,aAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KAAM,IACpE,2BACA,qBAAGC,KAAI,wBAAwBZ,MAAAA,OAAA,EAAAA,EAAQa,SAAR,KAA/B,c,wHC3CK,SAASC,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACnCC,GAAUC,EAAAA,EAAAA,aAuBhB,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAQG,SAAiD,IAAtCH,EAAQG,QAAQC,WAAWC,OAAnD,CAEA,IAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAmB,CACvBrB,IAXM,gCAYNU,KAAAA,EACAY,OAZS,OAaT,aAAc,WACdC,MAAO,OACPZ,MAAiB,SAAVA,EAAmB,cAAgB,eAC1Ca,YAAa,YACbC,OAAO,GAGTC,OAAOC,QAAQN,GAAkBO,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACzDZ,EAAWa,aAAaF,EAAKC,MAE/BlB,EAAQG,QAAQiB,YAAYd,MAC3B,CAACR,EAAME,EAASD,IAEZ,uBAAKf,UAAU,aAAaqC,IAAKrB,ICrB1C,IA6DA,EA7DyB,SAAC,GAAwB,IAAD,EAArBtB,EAAqB,EAArBA,KAAM4C,EAAe,EAAfA,SAC1BC,EAAO7C,EAAK8C,eACZC,GAAY,UAAA/C,EAAKG,KAAKC,oBAAV,eAAwB4C,QAAxB,QACVC,EAAmBjD,EAAnBiD,SAAUC,EAASlD,EAATkD,KAElB,OACE,gBAAC,IAAD,CAAQN,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACE/C,UAAU,YACVgD,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAEvB,2BACEnD,UAAU,WACVoD,wBAAyB,CAAEC,OAAQd,EAAKe,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,QAGJ,uBAAKlD,UAAU,iBACb,sBACEuD,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGjB,GACC,gBAAC,EAAAkB,KAAD,CAAMC,GAAInB,EAASoB,OAAOC,KAAMC,IAAI,QAApC,KACKtB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAiB,KAAD,CAAMC,GAAIlB,EAAKmB,OAAOC,KAAMC,IAAI,QAC7BrB,EAAKC,YAAYH,MADpB,SAOR,gBAAC7B,EAAD,CAAYC,KAAK,gC","sources":["webpack://hayoung-life/./src/components/bio.js","webpack://hayoung-life/./src/components/Utterances/index.js","webpack://hayoung-life/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author;\n  const social = data.site.siteMetadata?.social;\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}{\" \"}\n          <br />\n          <a href={`https://github.com/${social?.github || ``}`}>GitHub</a>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default Bio;\n","import React, { createRef, useEffect } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst branch = \"main\";\n\nexport default function Utterances({ repo, theme }) {\n  const rootElm = createRef();\n\n  useEffect(() => {\n    if (!rootElm.current || rootElm.current.childNodes.length !== 0) return;\n\n    const utterances = document.createElement(\"script\");\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      \"issue-term\": \"pathname\",\n      label: \"‚ú®üí¨‚ú®\",\n      theme: theme === \"dark\" ? \"photon-dark\" : \"github-light\",\n      crossOrigin: \"anonymous\",\n      async: true,\n    };\n\n    Object.entries(utterancesConfig).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n    rootElm.current.appendChild(utterances);\n  }, [repo, rootElm, theme]);\n\n  return <div className=\"utterances\" ref={rootElm} />;\n}\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport Utterances from \"../components/Utterances\";\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Utterances repo=\"iamhayoung/blog-comments\" />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","github","Utterances","repo","theme","rootElm","createRef","useEffect","current","childNodes","length","utterances","document","createElement","utterancesConfig","branch","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","location","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}